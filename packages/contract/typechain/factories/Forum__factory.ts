/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forum, ForumInterface } from "../Forum";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "NewItem",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contentCID",
        type: "string",
      },
    ],
    name: "addPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getAuthorKarma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "getItem",
    outputs: [
      {
        components: [
          {
            internalType: "enum Forum.ItemKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAtBlock",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "childIds",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "contentCID",
            type: "string",
          },
        ],
        internalType: "struct Forum.Item",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "getItemScore",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "voteValue",
        type: "int8",
      },
    ],
    name: "voteForItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611764806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633129e7731461006757806334e8ecf114610097578063988fd224146100b3578063a6322819146100e3578063aa7e5683146100ff578063ab398c871461011b575b600080fd5b610081600480360381019061007c9190610e4a565b61014b565b60405161008e91906111ea565b60405180910390f35b6100b160048036038101906100ac9190610e73565b6103b5565b005b6100cd60048036038101906100c89190610e4a565b61067c565b6040516100da919061114f565b60405180910390f35b6100fd60048036038101906100f89190610e09565b61069c565b005b61011960048036038101906101149190610eaf565b610895565b005b61013560048036038101906101309190610de0565b610b21565b604051610142919061114f565b60405180910390f35b610153610bbe565b816003600084815260200190815260200160002060010154146101ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a29061116a565b60405180910390fd5b600360008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff166001811115610214577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600181111561024c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820180548060200260200160405190810160405280929190818152602001828054801561031357602002820191906000526020600020905b8154815260200190600101908083116102ff575b5050505050815260200160068201805461032c906114aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610358906114aa565b80156103a55780601f1061037a576101008083540402835291602001916103a5565b820191906000526020600020905b81548152906001019060200180831161038857829003601f168201915b5050505050815250509050919050565b8160036000848152602001908152602001600020600101541461040d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610404906111aa565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160000b12158015610444575060018160000b13155b610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a9061118a565b60405180910390fd5b600061048e33610b6a565b9050600060016000858152602001908152602001600020600001600083815260200190815260200160002060009054906101000a900460000b90508260000b8160000b14610676578260016000868152602001908152602001600020600001600084815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055508260000b8160000b6001600087815260200190815260200160002060010154610542919061135c565b61054c91906112c8565b600160008681526020019081526020016000206001018190555060006003600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610674578360000b8260000b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610626919061135c565b61063091906112c8565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b50505050565b600060016000838152602001908152602001600020600101549050919050565b6106a66000610b9a565b60006106b26000610bb0565b9050600033905060606040518060e0016040528060006001811115610700577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001848152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff168152602001438152602001828152602001858152506003600085815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156107a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005019080519060200190610828929190610c49565b5060c0820151816006019080519060200190610845929190610c96565b509050508173ffffffffffffffffffffffffffffffffffffffff166000847fb4bba01ed96318ae148503828dce3c6232944f11f5fa7b3281f4010f7c31934f60405160405180910390a450505050565b816003600084815260200190815260200160002060010154146108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e4906111ca565b60405180910390fd5b6108f76000610b9a565b60006109036000610bb0565b905060003390506003600085815260200190815260200160002060050182908060018154018082558091505060019003906000526020600020016000909190919091505560606040518060e0016040528060018081111561098d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018481526020018681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001438152602001828152602001858152506003600085815260200190815260200160002060008201518160000160006101000a81548160ff02191690836001811115610a2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005019080519060200190610ab4929190610c49565b5060c0820151816006019080519060200190610ad1929190610c96565b509050508173ffffffffffffffffffffffffffffffffffffffff1685847fb4bba01ed96318ae148503828dce3c6232944f11f5fa7b3281f4010f7c31934f60405160405180910390a45050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081604051602001610b7d9190611134565b604051602081830303815290604052805190602001209050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6040518060e0016040528060006001811115610c03577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215610c85579160200282015b82811115610c84578251825591602001919060010190610c69565b5b509050610c929190610d1c565b5090565b828054610ca2906114aa565b90600052602060002090601f016020900481019282610cc45760008555610d0b565b82601f10610cdd57805160ff1916838001178555610d0b565b82800160010185558215610d0b579182015b82811115610d0a578251825591602001919060010190610cef565b5b509050610d189190610d1c565b5090565b5b80821115610d35576000816000905550600101610d1d565b5090565b6000610d4c610d4784611231565b61120c565b905082815260208101848484011115610d6457600080fd5b610d6f848285611468565b509392505050565b600081359050610d86816116e9565b92915050565b600081359050610d9b81611700565b92915050565b600082601f830112610db257600080fd5b8135610dc2848260208601610d39565b91505092915050565b600081359050610dda81611717565b92915050565b600060208284031215610df257600080fd5b6000610e0084828501610d77565b91505092915050565b600060208284031215610e1b57600080fd5b600082013567ffffffffffffffff811115610e3557600080fd5b610e4184828501610da1565b91505092915050565b600060208284031215610e5c57600080fd5b6000610e6a84828501610dcb565b91505092915050565b60008060408385031215610e8657600080fd5b6000610e9485828601610dcb565b9250506020610ea585828601610d8c565b9150509250929050565b60008060408385031215610ec257600080fd5b6000610ed085828601610dcb565b925050602083013567ffffffffffffffff811115610eed57600080fd5b610ef985828601610da1565b9150509250929050565b6000610f0f8383611125565b60208301905092915050565b610f24816113f0565b82525050565b610f3b610f36826113f0565b61150d565b82525050565b6000610f4c82611272565b610f568185611295565b9350610f6183611262565b8060005b83811015610f92578151610f798882610f03565b9750610f8483611288565b925050600181019050610f65565b5085935050505092915050565b610fa881611456565b82525050565b610fb781611415565b82525050565b6000610fc88261127d565b610fd281856112a6565b9350610fe2818560208601611477565b610feb816115ed565b840191505092915050565b6000611003600d836112b7565b915061100e8261160b565b602082019050919050565b60006110266027836112b7565b915061103182611634565b604082019050919050565b60006110496013836112b7565b915061105482611683565b602082019050919050565b600061106c601a836112b7565b9150611077826116ac565b602082019050919050565b600060e08301600083015161109a6000860182610f9f565b5060208301516110ad6020860182611125565b5060408301516110c06040860182611125565b5060608301516110d36060860182610f1b565b5060808301516110e66080860182611125565b5060a083015184820360a08601526110fe8282610f41565b91505060c083015184820360c08601526111188282610fbd565b9150508091505092915050565b61112e8161144c565b82525050565b60006111408284610f2a565b60148201915081905092915050565b60006020820190506111646000830184610fae565b92915050565b6000602082019050818103600083015261118381610ff6565b9050919050565b600060208201905081810360008301526111a381611019565b9050919050565b600060208201905081810360008301526111c38161103c565b9050919050565b600060208201905081810360008301526111e38161105f565b9050919050565b600060208201905081810360008301526112048184611082565b905092915050565b6000611216611227565b905061122282826114dc565b919050565b6000604051905090565b600067ffffffffffffffff82111561124c5761124b6115be565b5b611255826115ed565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006112d382611415565b91506112de83611415565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561131957611318611531565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561135157611350611531565b5b828201905092915050565b600061136782611415565b915061137283611415565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156113ad576113ac611531565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156113e5576113e4611531565b5b828203905092915050565b60006113fb8261142c565b9050919050565b6000819050611410826116d5565b919050565b6000819050919050565b60008160000b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061146182611402565b9050919050565b82818337600083830152505050565b60005b8381101561149557808201518184015260208101905061147a565b838111156114a4576000848401525b50505050565b600060028204905060018216806114c257607f821691505b602082108114156114d6576114d561158f565b5b50919050565b6114e5826115ed565b810181811067ffffffffffffffff82111715611504576115036115be565b5b80604052505050565b60006115188261151f565b9050919050565b600061152a826115fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4e6f206974656d20666f756e6400000000000000000000000000000000000000600082015250565b7f496e76616c696420766f74652076616c75652e204d757374206265202d312c2060008201527f302c206f72203100000000000000000000000000000000000000000000000000602082015250565b7f4974656d20646f6573206e6f7420657869737400000000000000000000000000600082015250565b7f506172656e74206974656d20646f6573206e6f74206578697374000000000000600082015250565b600281106116e6576116e5611560565b5b50565b6116f2816113f0565b81146116fd57600080fd5b50565b6117098161141f565b811461171457600080fd5b50565b6117208161144c565b811461172b57600080fd5b5056fea2646970667358221220cd6fc7c7f480f33660b415ec6322e81b14d6ace4bf88e3fa9b5a698c2018190464736f6c63430008040033";

export class Forum__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forum> {
    return super.deploy(overrides || {}) as Promise<Forum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Forum {
    return super.attach(address) as Forum;
  }
  connect(signer: Signer): Forum__factory {
    return super.connect(signer) as Forum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForumInterface {
    return new utils.Interface(_abi) as ForumInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Forum {
    return new Contract(address, _abi, signerOrProvider) as Forum;
  }
}
